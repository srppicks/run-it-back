{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/FORKAIA/Week_2/RUN_IT_BACK/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Container, Button } from \"reactstrap\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport PersonPage from \"./components/PersonPage\";\nconst Title = styled.h1`\n  text-align: center;\n  padding: 1rem;\n  background-color: #6c757d;\n  color: white;\n`;\nconst ButtonBar = styled.div`\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\nconst GOOGLE_CLIENT_ID = \"891271447458-2tacoegsns3ccft1b88g46t3a0kkn6ep.apps.googleusercontent.com\";\n\nconst App = () => {\n  const [loggedIn, setLogin] = React.useState(false);\n  const [currPlayer, setPlayer] = React.useState(null);\n  const [mode, setMode] = React.useState(\"home\");\n\n  const handleGoogleLogin = response => {\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.tokenId}`\n      }\n    }).then(fetchResponse => {\n      if (!fetchResponse.ok) {\n        alert('Unable to authenticate', fetchResponse.statusText);\n        setLogin(false);\n      } else {\n        setLogin(true);\n        const customer = fetch(`/api/players/${response.googleId}/`).then(response => {\n          if (!response.ok) {\n            throw new Error(response.status_text);\n          }\n\n          return response.json();\n        }).then(data => {\n          return data;\n        }).catch(error => {\n          console.log(error);\n        });\n        customer.then(data => {\n          setPlayer(data[0]);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n  };\n\n  const handleGoogleFailure = response => {\n    alert(response.error);\n  };\n\n  const handleGoogleLogout = () => {\n    fetch(\"/logout\", {\n      method: \"POST\"\n    }).then(fetchResponse => {\n      if (!fetchResponse.ok) {\n        alert(\"Error logging out\", fetchResponse.statusText);\n      }\n\n      setLogin(false);\n    });\n  };\n\n  const handleEditReturn = player => {\n    if (player) {\n      const updatedPerson = { ...currPlayer,\n        ...player\n      };\n      fetch(`/api/articles/${updatedPerson.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(updatedPerson),\n        headers: new Headers({\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedPlayer => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        setPlayer(fetchedPlayer);\n      }).catch(err => console.error(err)); // eslint-disable-line no-console\n    }\n\n    setMode('view');\n  };\n\n  const loginButton = /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: GOOGLE_CLIENT_ID,\n    buttonText: \"Login with Google\",\n    isSignedIn: true,\n    onSuccess: handleGoogleLogin,\n    onFailure: handleGoogleFailure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  });\n  const logoutButton = /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: GOOGLE_CLIENT_ID,\n    buttonText: \"Logout\",\n    onLogoutSuccess: handleGoogleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  });\n  const profileButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setMode(\"profile\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, \"Profile\");\n\n  if (mode === \"home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"Log-In Tests\"), /*#__PURE__*/React.createElement(ButtonBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, !loggedIn && loginButton, \" \", loggedIn && profileButton, \" \", loggedIn && logoutButton));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"Profile Page\"), /*#__PURE__*/React.createElement(PersonPage, {\n    backHome: setMode,\n    currPlayer: currPlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/steper123/Desktop/FORKAIA/Week_2/RUN_IT_BACK/client/src/App.js"],"names":["React","useState","useEffect","styled","Container","Button","GoogleLogin","GoogleLogout","PersonPage","Title","h1","ButtonBar","div","GOOGLE_CLIENT_ID","App","loggedIn","setLogin","currPlayer","setPlayer","mode","setMode","handleGoogleLogin","response","fetch","method","headers","Authorization","tokenId","then","fetchResponse","ok","alert","statusText","customer","googleId","Error","status_text","json","data","catch","error","console","log","handleGoogleFailure","handleGoogleLogout","handleEditReturn","player","updatedPerson","id","body","JSON","stringify","Headers","Accept","fetchedPlayer","err","loginButton","logoutButton","profileButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport styled from \"styled-components\";\nimport { Container, Button } from \"reactstrap\";\n\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\n\nimport PersonPage from \"./components/PersonPage\"\n\nconst Title = styled.h1`\n  text-align: center;\n  padding: 1rem;\n  background-color: #6c757d;\n  color: white;\n`;\nconst ButtonBar = styled.div`\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst GOOGLE_CLIENT_ID = \"891271447458-2tacoegsns3ccft1b88g46t3a0kkn6ep.apps.googleusercontent.com\";\n\nconst App = () => {\n  const [loggedIn, setLogin] = React.useState(false);\n  const [currPlayer, setPlayer] = React.useState(null);\n  const [mode, setMode] = React.useState(\"home\");\n\n  const handleGoogleLogin = (response) => {\n  fetch('/login', {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${response.tokenId}`,\n    },\n  }).then((fetchResponse) => {\n    if (!fetchResponse.ok) {\n      alert('Unable to authenticate', fetchResponse.statusText);\n      setLogin(false);\n    } else {\n      setLogin(true);\n      const customer = fetch(`/api/players/${response.googleId}/`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(response.status_text);\n          }\n          return response.json();\n        })\n        .then(data => {\n          return data;\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      customer\n        .then(data => {\n          setPlayer(data[0]);\n        }).catch(error => {\n          console.log(error);\n        });\n    }\n  });\n};\n\n  const handleGoogleFailure = response => {\n    alert(response.error);\n  };\n\n  const handleGoogleLogout = () => {\n    fetch(\"/logout\", {\n      method: \"POST\"\n    }).then(fetchResponse => {\n      if (!fetchResponse.ok) {\n        alert(\"Error logging out\", fetchResponse.statusText);\n      }\n      setLogin(false);\n    });\n  };\n\n  const handleEditReturn = (player) => {\n    if (player) {\n      const updatedPerson = { ...currPlayer, ...player };\n\n      fetch(`/api/articles/${updatedPerson.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(updatedPerson),\n        headers: new Headers({\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        }),\n      })\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedPlayer) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          setPlayer(fetchedPlayer);\n        })\n        .catch((err) => console.error(err)); // eslint-disable-line no-console\n    }\n\n\n    setMode('view');\n\n\n\n\n  };\n\n  const loginButton = (\n    <GoogleLogin\n      clientId={GOOGLE_CLIENT_ID}\n      buttonText=\"Login with Google\"\n      isSignedIn\n      onSuccess={handleGoogleLogin}\n      onFailure={handleGoogleFailure}\n    />\n  );\n  const logoutButton = (\n    <GoogleLogout\n      clientId={GOOGLE_CLIENT_ID}\n      buttonText=\"Logout\"\n      onLogoutSuccess={handleGoogleLogout}\n    />\n  );\n\n  const profileButton = (\n    <Button\n      onClick={() => setMode(\"profile\")}>\n      Profile\n      </Button>\n\n  );\n\n  if (mode === \"home\") {\n    return (\n      <div>\n        <Title>Log-In Tests</Title>\n        <ButtonBar>\n          {!loggedIn && loginButton} {loggedIn && profileButton} {loggedIn && logoutButton}\n        </ButtonBar>\n      </div>\n\n    );\n  }\n\n  return (\n    <div>\n      <Title>Profile Page</Title>\n      <PersonPage backHome={setMode} currPlayer={currPlayer} ></PersonPage>\n    </div>\n\n  );\n\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}