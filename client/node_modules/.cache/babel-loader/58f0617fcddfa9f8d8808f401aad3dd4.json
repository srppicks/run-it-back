{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/FORKAIA/Week_2/RUN_IT_BACK/client/src/pages/index.js\";\nimport React, { Component } from 'react';\nimport Layout from '../hoc/Layout/Layout';\nimport Header from '../components/Header/Header';\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport PersonPage from \"../components/PersonPage\";\nconst GOOGLE_CLIENT_ID = \"891271447458-2tacoegsns3ccft1b88g46t3a0kkn6ep.apps.googleusercontent.com\";\n\nconst Main = () => {\n  const [loggedIn, setLogin] = React.useState(false);\n  const [currPlayer, setPlayer] = React.useState(null);\n  const [mode, setMode] = React.useState(\"Home\");\n  console.log(loggedIn);\n  console.log(currPlayer);\n\n  const handleGoogleLogin = response => {\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.tokenId}`\n      }\n    }).then(fetchResponse => {\n      if (!fetchResponse.ok) {\n        alert('Unable to authenticate', fetchResponse.statusText);\n        setLogin(false);\n      } else {\n        setLogin(true);\n        const customer = fetch(`/api/players/${response.googleId}/`).then(response => {\n          if (!response.ok) {\n            throw new Error(response.status_text);\n          }\n\n          return response.json();\n        }).then(data => {\n          return data;\n        }).catch(error => {\n          console.log(error);\n        });\n        customer.then(data => {\n          setPlayer(data[0]);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n  };\n\n  const handleGoogleFailure = response => {\n    console.log(\"FAIL\");\n    alert(response.error);\n  };\n\n  const handleGoogleLogout = () => {\n    console.log(\"BLAHH\");\n    fetch(\"/logout\", {\n      method: \"POST\"\n    }).then(fetchResponse => {\n      if (!fetchResponse.ok) {\n        alert(\"Error logging out\", fetchResponse.statusText);\n      }\n\n      console.log(\"Here\");\n      setLogin(false);\n      setPlayer(null);\n      console.log(loggedIn);\n      console.log(currPlayer);\n    });\n  };\n\n  const handleEditReturn = player => {\n    if (player) {\n      const updatedPerson = { ...currPlayer,\n        ...player\n      };\n      fetch(`/api/players/${updatedPerson.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(updatedPerson),\n        headers: new Headers({\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedPlayer => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        console.log(\"Here\");\n        console.log(fetchedPlayer);\n        setPlayer(fetchedPlayer);\n      }).catch(err => console.error(err)); // eslint-disable-line no-console\n    }\n\n    console.log(\"Mode\");\n    setMode(\"Home\");\n  };\n\n  if (mode === \"Home\") {\n    if (currPlayer === null) {\n      console.log(\"Here\");\n      return /*#__PURE__*/React.createElement(Layout, {\n        handleGoogleLogin: handleGoogleLogin,\n        handleGoogleLogout: handleGoogleLogout,\n        handleGoogleFailure: handleGoogleFailure,\n        setMode: setMode,\n        googleID: GOOGLE_CLIENT_ID,\n        currPlayer: currPlayer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 10\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      handleGoogleLogin: handleGoogleLogin,\n      handleGoogleLogout: handleGoogleLogout,\n      handleGoogleFailure: handleGoogleFailure,\n      setMode: setMode,\n      googleID: GOOGLE_CLIENT_ID,\n      currPlayer: currPlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }\n    }));\n  } else if (mode === \"My Profile\") {\n    return /*#__PURE__*/React.createElement(Layout, {\n      handleGoogleLogin: handleGoogleLogin,\n      handleGoogleLogout: handleGoogleLogout,\n      handleGoogleFailure: handleGoogleFailure,\n      setMode: setMode,\n      googleID: GOOGLE_CLIENT_ID,\n      currPlayer: currPlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }));\n  } else if (mode === \"Create Games\") {} else if (mode === \"Search Games\") {} else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 6\n      }\n    });\n  } //CONTINUE WORKING HERE\n\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/steper123/Desktop/FORKAIA/Week_2/RUN_IT_BACK/client/src/pages/index.js"],"names":["React","Component","Layout","Header","GoogleLogin","GoogleLogout","PersonPage","GOOGLE_CLIENT_ID","Main","loggedIn","setLogin","useState","currPlayer","setPlayer","mode","setMode","console","log","handleGoogleLogin","response","fetch","method","headers","Authorization","tokenId","then","fetchResponse","ok","alert","statusText","customer","googleId","Error","status_text","json","data","catch","error","handleGoogleFailure","handleGoogleLogout","handleEditReturn","player","updatedPerson","id","body","JSON","stringify","Headers","Accept","fetchedPlayer","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../hoc/Layout/Layout'\nimport Header from '../components/Header/Header';\n\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\n\nimport PersonPage from \"../components/PersonPage\"\n\nconst GOOGLE_CLIENT_ID = \"891271447458-2tacoegsns3ccft1b88g46t3a0kkn6ep.apps.googleusercontent.com\";\n\nconst Main = () => {\n  const [loggedIn, setLogin] = React.useState(false);\n  const [currPlayer, setPlayer] = React.useState(null);\n  const [mode, setMode] = React.useState(\"Home\");\n\n  console.log(loggedIn);\n  console.log(currPlayer);\n\n\n  const handleGoogleLogin = (response) => {\n   fetch('/login', {\n     method: 'POST',\n     headers: {\n       Authorization: `Bearer ${response.tokenId}`,\n     },\n   }).then((fetchResponse) => {\n     if (!fetchResponse.ok) {\n       alert('Unable to authenticate', fetchResponse.statusText);\n       setLogin(false);\n     } else {\n       setLogin(true);\n       const customer = fetch(`/api/players/${response.googleId}/`)\n         .then(response => {\n           if (!response.ok) {\n             throw new Error(response.status_text);\n           }\n           return response.json();\n         })\n         .then(data => {\n           return data;\n         })\n         .catch(error => {\n           console.log(error);\n         });\n       customer\n         .then(data => {\n           setPlayer(data[0]);\n         }).catch(error => {\n           console.log(error);\n         });\n     }\n   });\n\n\n  };\n\n const handleGoogleFailure = response => {\n   console.log(\"FAIL\");\n   alert(response.error);\n };\n\n const handleGoogleLogout = () => {\n   console.log(\"BLAHH\");\n   fetch(\"/logout\", {\n     method: \"POST\"\n   }).then(fetchResponse => {\n     if (!fetchResponse.ok) {\n       alert(\"Error logging out\", fetchResponse.statusText);\n     }\n     console.log(\"Here\");\n     setLogin(false);\n     setPlayer(null);\n     console.log(loggedIn);\n     console.log(currPlayer);\n   });\n };\n\n const handleEditReturn = (player) => {\n   if (player) {\n     const updatedPerson = { ...currPlayer, ...player };\n\n     fetch(`/api/players/${updatedPerson.id}`, {\n       method: 'PUT',\n       body: JSON.stringify(updatedPerson),\n       headers: new Headers({\n         Accept: 'application/json',\n         'Content-Type': 'application/json',\n       }),\n     })\n       .then((response) => {\n         if (response.ok) {\n           return response.json();\n         }\n         throw new Error(response.statusText);\n       })\n       .then((fetchedPlayer) => {\n         // Create a copy of the collections, replacing the current article if this is an edit\n         console.log(\"Here\");\n         console.log(fetchedPlayer);\n         setPlayer(fetchedPlayer);\n       })\n       .catch((err) => console.error(err)); // eslint-disable-line no-console\n   }\n\n   console.log(\"Mode\");\n   setMode(\"Home\");\n\n };\n\n if (mode === \"Home\") {\n   if (currPlayer === null) {\n     console.log(\"Here\");\n     return (\n       <Layout handleGoogleLogin={handleGoogleLogin}\n               handleGoogleLogout={handleGoogleLogout}\n               handleGoogleFailure={handleGoogleFailure}\n               setMode={setMode}\n               googleID={GOOGLE_CLIENT_ID}\n               currPlayer={currPlayer}>\n         <Header />\n       </Layout>\n     );\n   }\n\n   return (\n       <Layout handleGoogleLogin={handleGoogleLogin}\n               handleGoogleLogout={handleGoogleLogout}\n               handleGoogleFailure={handleGoogleFailure}\n               setMode={setMode}\n               googleID={GOOGLE_CLIENT_ID}\n               currPlayer={currPlayer}>\n         <Header />\n       </Layout>\n   );\n\n }\n else if (mode === \"My Profile\") {\n   return(<Layout handleGoogleLogin={handleGoogleLogin}\n           handleGoogleLogout={handleGoogleLogout}\n           handleGoogleFailure={handleGoogleFailure}\n           setMode={setMode}\n           googleID={GOOGLE_CLIENT_ID}\n           currPlayer={currPlayer}>\n     <Header />\n   </Layout>);\n\n\n }\n else if (mode === \"Create Games\") {\n\n\n }\n else if (mode === \"Search Games\") {\n\n\n }\n else {\n   return (\n     <div>\n     </div>\n   );\n\n }\n\n\n\n\n  //CONTINUE WORKING HERE\n\n\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}