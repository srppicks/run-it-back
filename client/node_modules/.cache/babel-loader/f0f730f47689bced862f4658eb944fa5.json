{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/FORKAIA/Week_2/RUN_IT_BACK/client/src/components/LocalGameMap.js\";\nimport React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport styled from \"styled-components\";\nimport { Row, Col, Button, Container } from \"reactstrap\";\nimport Marker from \"./Marker\";\n\nconst LocalGameMap = ({\n  currPlayer,\n  setNewLatitude,\n  setNewLongitude\n}) => {\n  const [markLong, setMarkLong] = React.useState(currPlayer.longitude ? currPlayer.longitude : -73.940007);\n  const [markLat, setMarkLat] = React.useState(currPlayer.latitude ? currPlayer.latitude : 40.698413);\n  const [changed, setChanged] = React.useState(false);\n  const [locations, setLocations] = React.useState([]);\n  const [mode, setMode] = React.useState(\"map\");\n  const center = {\n    lat: markLat,\n    lng: markLong\n  };\n  useEffect(() => {\n    const fetchLocations = () => {\n      fetch(\"/api/locations\").then(response => {\n        if (!response.ok) {\n          //alert(\"E\");\n          throw new Error(response.status_text);\n        } //          alert(\"T\");\n\n\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        setLocations(data);\n      }).catch(err => console.log(err)); // eslint-disable-line no-console\n    };\n\n    fetchLocations();\n  }, []);\n  const htmlArray = locations.map(place => /*#__PURE__*/React.createElement(Marker, {\n    lat: place.latitude,\n    lng: place.longitude,\n    name: place.name,\n    changed: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }));\n  htmlArray.push( /*#__PURE__*/React.createElement(Marker, {\n    lat: markLat,\n    lng: markLong,\n    name: \"Home\",\n    changed: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }));\n\n  if (setNewLatitude && setNewLongitude) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyCIXHbmHW8R8wNWLQNI1ZmWpmqqwptmW5o\"\n      },\n      defaultCenter: center,\n      defaultZoom: 9,\n      onClick: obj => {\n        setNewLatitude(obj.lat);\n        setNewLongitude(obj.lng);\n        setMarkLong(obj.lng);\n        setMarkLat(obj.lat);\n        setChanged(true);\n        console.log(obj.lat, obj.lng);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      lat: markLat,\n      lng: markLong,\n      name: \"Home\",\n      changed: changed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: \"AIzaSyCIXHbmHW8R8wNWLQNI1ZmWpmqqwptmW5o\"\n    },\n    defaultCenter: center,\n    defaultZoom: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, htmlArray));\n};\n\nexport default LocalGameMap;","map":{"version":3,"sources":["/Users/steper123/Desktop/FORKAIA/Week_2/RUN_IT_BACK/client/src/components/LocalGameMap.js"],"names":["React","useState","useEffect","GoogleMapReact","styled","Row","Col","Button","Container","Marker","LocalGameMap","currPlayer","setNewLatitude","setNewLongitude","markLong","setMarkLong","longitude","markLat","setMarkLat","latitude","changed","setChanged","locations","setLocations","mode","setMode","center","lat","lng","fetchLocations","fetch","then","response","ok","Error","status_text","json","data","console","log","catch","err","htmlArray","map","place","name","push","height","width","key","obj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport styled from \"styled-components\";\nimport { Row, Col, Button, Container } from \"reactstrap\";\nimport Marker from \"./Marker\"\n\nconst LocalGameMap = ( { currPlayer, setNewLatitude, setNewLongitude } ) => {\n  const [markLong, setMarkLong] = React.useState(currPlayer.longitude ? currPlayer.longitude : -73.940007);\n  const [markLat, setMarkLat] = React.useState(currPlayer.latitude ? currPlayer.latitude : 40.698413);\n  const [changed, setChanged] = React.useState(false);\n  const [locations, setLocations] = React.useState([]);\n  const [mode, setMode] = React.useState(\"map\");\n\n  const center = {lat: markLat, lng: markLong};\n\n  useEffect(() => {\n      const fetchLocations = () => {\n        fetch(\"/api/locations\")\n          .then(response => {\n            if (!response.ok) {\n            //alert(\"E\");\n            throw new Error(response.status_text);\n          }\n          //          alert(\"T\");\n            return response.json();\n        })\n          .then(data => {\n            console.log(data);\n\n            setLocations(data);\n          })\n          .catch(err => console.log(err)); // eslint-disable-line no-console\n      };\n\n      fetchLocations();\n\n    }, []);\n\n\n  const htmlArray = locations.map((place) => (\n    <Marker\n      lat={place.latitude}\n      lng={place.longitude}\n      name={place.name}\n      changed={null}\n    ></Marker>\n  ));\n\n  htmlArray.push((\n    <Marker\n      lat={markLat}\n      lng={markLong}\n      name=\"Home\"\n      changed={null}\n      >\n    </Marker>\n\n  ));\n\n\n  if (setNewLatitude && setNewLongitude) {\n    return (\n      <div style={{height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyCIXHbmHW8R8wNWLQNI1ZmWpmqqwptmW5o\"}}\n          defaultCenter={center}\n          defaultZoom={9}\n          onClick={(obj) => {\n            setNewLatitude(obj.lat);\n            setNewLongitude(obj.lng);\n            setMarkLong(obj.lng);\n            setMarkLat(obj.lat);\n            setChanged(true);\n            console.log(obj.lat, obj.lng);\n          }}\n        >\n          <Marker\n            lat={markLat}\n            lng={markLong}\n            name=\"Home\"\n            changed={changed}\n            >\n          </Marker>\n\n\n        </GoogleMapReact>\n      </div>\n    );\n\n  }\n  return (\n  <div style={{height: '100vh', width: '100%' }}>\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: \"AIzaSyCIXHbmHW8R8wNWLQNI1ZmWpmqqwptmW5o\"}}\n      defaultCenter={center}\n      defaultZoom={9}\n    >\n      {htmlArray}\n    </GoogleMapReact>\n  </div>\n);\n\n\n};\n\nexport default LocalGameMap;\n"]},"metadata":{},"sourceType":"module"}